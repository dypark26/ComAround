{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport countAVE from \"../util/countAVE\";\nimport { getTable } from \"../util/api\";\nimport countALL from \"../util/countALL\";\n\n// 총합, 평균 관련된 로직을 커스텀훅으로 뺐습니다.\n// urlReqCompanyName는 회사명이 들어옵니다\n// prosType과 category는 util폴더의 countALL,countAVE에 상세한 설명 달아놓았습니다.\nconst useCalculate = (urlReqCompanyName, prosType, category) => {\n  _s();\n  const [totalPros, setTotalPros] = useState(0);\n  const [totalAVE, setTotalAVE] = useState(0);\n  // getTable 은 api.ts에 있습니다.\n  console.log(\"prosType\", prosType);\n  console.log(\"category\", category);\n  const {\n    data\n  } = useQuery([\"table\"], () => getTable(urlReqCompanyName), {\n    onSuccess: _ref => {\n      let {\n        data\n      } = _ref;\n      console.log(\"메소드 실행\");\n      const a = countALL(data, prosType);\n      console.log(\"a\", a);\n      setTotalPros(countALL(data, prosType));\n      setTotalAVE(countAVE(data, category));\n    }\n  });\n  return {\n    totalPros,\n    totalAVE\n  };\n};\n_s(useCalculate, \"HHL0PUvqMXVAFflSaHXVgnSg8Sk=\", false, function () {\n  return [useQuery];\n});\nexport default useCalculate;","map":{"version":3,"names":["useState","useQuery","countAVE","getTable","countALL","useCalculate","urlReqCompanyName","prosType","category","totalPros","setTotalPros","totalAVE","setTotalAVE","console","log","data","onSuccess","a"],"sources":["/Users/hongdakyung/Desktop/myWorkSpace/comAround/src/hooks/useCalculate.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport countAVE from \"../util/countAVE\";\nimport { getTable } from \"../util/api\";\nimport countALL from \"../util/countALL\";\n\n// 총합, 평균 관련된 로직을 커스텀훅으로 뺐습니다.\n// urlReqCompanyName는 회사명이 들어옵니다\n// prosType과 category는 util폴더의 countALL,countAVE에 상세한 설명 달아놓았습니다.\nconst useCalculate = (\n  urlReqCompanyName: string,\n  prosType: string,\n  category: string\n) => {\n  const [totalPros, setTotalPros] = useState(0);\n  const [totalAVE, setTotalAVE] = useState(0);\n  // getTable 은 api.ts에 있습니다.\n  console.log(\"prosType\", prosType);\n  console.log(\"category\", category);\n  const { data } = useQuery<any>([\"table\"], () => getTable(urlReqCompanyName), {\n    onSuccess: ({ data }) => {\n      console.log(\"메소드 실행\");\n      const a = countALL(data, prosType);\n      console.log(\"a\", a);\n      setTotalPros(countALL(data, prosType));\n      setTotalAVE(countAVE(data, category));\n    },\n  });\n  return { totalPros, totalAVE };\n};\n\nexport default useCalculate;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA;AACA;AACA,MAAMC,YAAY,GAAG,CACnBC,iBAAyB,EACzBC,QAAgB,EAChBC,QAAgB,KACb;EAAA;EACH,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC3C;EACAa,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEP,QAAQ,CAAC;EACjCM,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEN,QAAQ,CAAC;EACjC,MAAM;IAAEO;EAAK,CAAC,GAAGd,QAAQ,CAAM,CAAC,OAAO,CAAC,EAAE,MAAME,QAAQ,CAACG,iBAAiB,CAAC,EAAE;IAC3EU,SAAS,EAAE,QAAc;MAAA,IAAb;QAAED;MAAK,CAAC;MAClBF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrB,MAAMG,CAAC,GAAGb,QAAQ,CAACW,IAAI,EAAER,QAAQ,CAAC;MAClCM,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEG,CAAC,CAAC;MACnBP,YAAY,CAACN,QAAQ,CAACW,IAAI,EAAER,QAAQ,CAAC,CAAC;MACtCK,WAAW,CAACV,QAAQ,CAACa,IAAI,EAAEP,QAAQ,CAAC,CAAC;IACvC;EACF,CAAC,CAAC;EACF,OAAO;IAAEC,SAAS;IAAEE;EAAS,CAAC;AAChC,CAAC;AAAC,GApBIN,YAAY;EAAA,QAUCJ,QAAQ;AAAA;AAY3B,eAAeI,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}