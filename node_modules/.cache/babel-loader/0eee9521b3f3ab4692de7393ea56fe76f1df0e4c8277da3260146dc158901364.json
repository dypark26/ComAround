{"ast":null,"code":"var _jsxFileName = \"/Users/hongdakyung/Desktop/myWorkSpace/comAround copy/src/pages/CompanyPage.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// 1. MainPage에서 넘어온 id를 기준으로, 서버에 데이터 요청을 보낸다.\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyPage = () => {\n  _s();\n  const location = useLocation();\n  const urlRequest = location.state[\"companyName\"];\n  const [dataList, setDataList] = useState([]);\n  const pros1Array = [];\n  const [pros1Result, setPros1Result] = useState(0);\n  useEffect(() => {\n    getList();\n  }, []);\n  const getList = () => {\n    axios.get(\"https://sheet.best/api/sheets/325137bc-19de-426f-a61c-bae2208f94db/company/kakao\").then(response => {\n      // wholeData : [{'회사명':'카카오','장점1':'1','장점2':'0'},{'회사명':'카카오','장점1':'1'},...]\n      const wholeData = response.data;\n      setDataList(wholeData);\n      console.log(\"dataList:\", dataList);\n      {\n        dataList.map(item => {\n          pros1Array.push(Number(item.pros1));\n        });\n      }\n      // pros1을 sum해주는 함수\n      let result = pros1Array.reduce((total, value) => total += value, 0);\n      setPros1Result(result);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"urlRequest:\", urlRequest]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"pros1Result:\", pros1Result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyPage, \"cuFR2Q05uH+ZFZ0LQJCvDMmsaFk=\", false, function () {\n  return [useLocation];\n});\n_c = CompanyPage;\nexport default CompanyPage;\n\n// const getList = () => {\n//   axios\n//     .get(\n//       \"https://sheet.best/api/sheets/325137bc-19de-426f-a61c-bae2208f94db/company/kakao\"\n//     )\n//     .then((response: any) => {\n//       // 결과값 [{'회사명':카카오, '장점1':'카카오장점1', '장점2':'카카오장점2'}, {'회사명':카카오, '장점1':'카카오장점1', '장점2':'카카오장점2'}]\n//       console.log(response.data);\n//       // wholeData : [{'회사명':'카카오','장점1':'1','장점2':'0'},{'회사명':'카카오','장점1':'1'},...]\n//       const wholeData = response.data;\n//       const 장점1: number[] = [];\n//       {\n//         wholeData.map((item: any) => {\n//           // wholeData의 객체를 하나씩 뽑아서(=item),\n//           // item의 '장점1'의 value들만 미리 만들어놓은 장점1 배열에 push해준다.\n\n//           장점1.push(Number(item.장점1));\n//         });\n//       }\n//       // reduce 함수를 이용해서, 장점1 배열값을 모두 합산해준다.\n//       console.log(장점1);\n//       let result: number = 장점1.reduce(\n//         (total: number, value: number) => (total += value),\n//         0\n//       );\n//       console.log(\"result:\", result);\n//     });\n// };\nvar _c;\n$RefreshReg$(_c, \"CompanyPage\");","map":{"version":3,"names":["axios","useEffect","useState","useLocation","CompanyPage","location","urlRequest","state","dataList","setDataList","pros1Array","pros1Result","setPros1Result","getList","get","then","response","wholeData","data","console","log","map","item","push","Number","pros1","result","reduce","total","value"],"sources":["/Users/hongdakyung/Desktop/myWorkSpace/comAround copy/src/pages/CompanyPage.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// 1. MainPage에서 넘어온 id를 기준으로, 서버에 데이터 요청을 보낸다.\n//\n\nconst CompanyPage = () => {\n  const location = useLocation();\n  const urlRequest = location.state[\"companyName\"];\n  const [dataList, setDataList] = useState([]);\n  const pros1Array: number[] = [];\n  const [pros1Result, setPros1Result] = useState(0);\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  const getList = () => {\n    axios\n      .get(\n        \"https://sheet.best/api/sheets/325137bc-19de-426f-a61c-bae2208f94db/company/kakao\"\n      )\n      .then((response: any) => {\n        // wholeData : [{'회사명':'카카오','장점1':'1','장점2':'0'},{'회사명':'카카오','장점1':'1'},...]\n        const wholeData = response.data;\n        setDataList(wholeData);\n        console.log(\"dataList:\", dataList);\n        {\n          dataList.map((item: any) => {\n            pros1Array.push(Number(item.pros1));\n          });\n        }\n        // pros1을 sum해주는 함수\n        let result: number = pros1Array.reduce(\n          (total: number, value: number) => (total += value),\n          0\n        );\n        setPros1Result(result);\n      });\n  };\n  return (\n    <div>\n      <h3>urlRequest:{urlRequest}</h3>\n      <h3>pros1Result:{pros1Result}</h3>\n    </div>\n  );\n};\n\nexport default CompanyPage;\n\n// const getList = () => {\n//   axios\n//     .get(\n//       \"https://sheet.best/api/sheets/325137bc-19de-426f-a61c-bae2208f94db/company/kakao\"\n//     )\n//     .then((response: any) => {\n//       // 결과값 [{'회사명':카카오, '장점1':'카카오장점1', '장점2':'카카오장점2'}, {'회사명':카카오, '장점1':'카카오장점1', '장점2':'카카오장점2'}]\n//       console.log(response.data);\n//       // wholeData : [{'회사명':'카카오','장점1':'1','장점2':'0'},{'회사명':'카카오','장점1':'1'},...]\n//       const wholeData = response.data;\n//       const 장점1: number[] = [];\n//       {\n//         wholeData.map((item: any) => {\n//           // wholeData의 객체를 하나씩 뽑아서(=item),\n//           // item의 '장점1'의 value들만 미리 만들어놓은 장점1 배열에 push해준다.\n\n//           장점1.push(Number(item.장점1));\n//         });\n//       }\n//       // reduce 함수를 이용해서, 장점1 배열값을 모두 합산해준다.\n//       console.log(장점1);\n//       let result: number = 장점1.reduce(\n//         (total: number, value: number) => (total += value),\n//         0\n//       );\n//       console.log(\"result:\", result);\n//     });\n// };\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AAAA;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAMG,UAAU,GAAGD,QAAQ,CAACE,KAAK,CAAC,aAAa,CAAC;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMQ,UAAoB,GAAG,EAAE;EAC/B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACdY,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,OAAO,GAAG,MAAM;IACpBb,KAAK,CACFc,GAAG,CACF,kFAAkF,CACnF,CACAC,IAAI,CAAEC,QAAa,IAAK;MACvB;MACA,MAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAI;MAC/BT,WAAW,CAACQ,SAAS,CAAC;MACtBE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEZ,QAAQ,CAAC;MAClC;QACEA,QAAQ,CAACa,GAAG,CAAEC,IAAS,IAAK;UAC1BZ,UAAU,CAACa,IAAI,CAACC,MAAM,CAACF,IAAI,CAACG,KAAK,CAAC,CAAC;QACrC,CAAC,CAAC;MACJ;MACA;MACA,IAAIC,MAAc,GAAGhB,UAAU,CAACiB,MAAM,CACpC,CAACC,KAAa,EAAEC,KAAa,KAAMD,KAAK,IAAIC,KAAM,EAClD,CAAC,CACF;MACDjB,cAAc,CAACc,MAAM,CAAC;IACxB,CAAC,CAAC;EACN,CAAC;EACD,oBACE;IAAA,wBACE;MAAA,WAAI,aAAW,EAACpB,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAChC;MAAA,WAAI,cAAY,EAACK,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEV,CAAC;AAAC,GAxCIP,WAAW;EAAA,QACED,WAAW;AAAA;AAAA,KADxBC,WAAW;AA0CjB,eAAeA,WAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}