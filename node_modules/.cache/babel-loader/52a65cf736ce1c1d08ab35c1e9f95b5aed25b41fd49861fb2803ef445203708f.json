{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useCountALL from \"../components/useCountALL\";\nimport useCountAVE from \"../components/useCountAVE\";\nimport { supabase } from \"../util/supabase\";\nconst useGetData = urlReqCompanyName => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [companyData, setCompanyData] = useState([{}]);\n  // supabase 잘 연결되었는지 확인\n  console.log(\"supabase:\", supabase);\n  // 총점1개, 장점1개 state 만들어보기\n\n  // supabase에서 table 가져오는 함수\n  const getTable = async () => {\n    _s();\n    const {\n      data,\n      error\n    } = await supabase.from(\"SurveyData\").select().eq(\"company\", `${urlReqCompanyName}`);\n    if (data) {\n      console.log(data);\n      setCompanyData(data);\n      console.log(companyData);\n      //   const { totalPros1 } = CountALL(companyData);\n      //   const { commuteAve } = CountAVE(companyData);\n      const {\n        totalPros1\n      } = useCountALL(companyData);\n      const {\n        commuteAve\n      } = useCountAVE(companyData);\n      console.log(totalPros1);\n      console.log(commuteAve);\n    }\n    if (error) {\n      console.log(\"에러가 나쪙 ㅠ.ㅠ\", error);\n    }\n    // useEffect 부분\n    useEffect(() => {\n      getTable();\n    }, []);\n    return {\n      data\n    };\n  };\n  _s(getTable, \"DOHxiDP0uAmpW/gqI7UVyc3Isk0=\", false, function () {\n    return [useCountALL, useCountAVE];\n  });\n};\n_s2(useGetData, \"B9HqqfPTjXdDi8ni5kaRmk1uUoI=\");\nexport default useGetData;","map":{"version":3,"names":["useEffect","useState","useCountALL","useCountAVE","supabase","useGetData","urlReqCompanyName","companyData","setCompanyData","console","log","getTable","data","error","from","select","eq","totalPros1","commuteAve"],"sources":["/Users/hongdakyung/Desktop/myWorkSpace/comAround-supabase-customHook/src/hooks/useGetData.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport useCountALL from \"../components/useCountALL\";\nimport CountALL from \"../components/useCountALL\";\nimport useCountAVE from \"../components/useCountAVE\";\nimport CountAVE from \"../components/useCountAVE\";\nimport { supabase } from \"../util/supabase\";\n\nconst useGetData = (urlReqCompanyName: string) => {\n  const [companyData, setCompanyData] = useState([{}]);\n  // supabase 잘 연결되었는지 확인\n  console.log(\"supabase:\", supabase);\n  // 총점1개, 장점1개 state 만들어보기\n\n  // supabase에서 table 가져오는 함수\n  const getTable = async () => {\n    const { data, error } = await supabase\n      .from(\"SurveyData\")\n      .select()\n      .eq(\"company\", `${urlReqCompanyName}`);\n\n    if (data) {\n      console.log(data);\n      setCompanyData(data);\n      console.log(companyData);\n      //   const { totalPros1 } = CountALL(companyData);\n      //   const { commuteAve } = CountAVE(companyData);\n      const { totalPros1 } = useCountALL(companyData);\n      const { commuteAve } = useCountAVE(companyData);\n\n      console.log(totalPros1);\n      console.log(commuteAve);\n    }\n    if (error) {\n      console.log(\"에러가 나쪙 ㅠ.ㅠ\", error);\n    }\n    // useEffect 부분\n    useEffect(() => {\n      getTable();\n    }, []);\n    return { data };\n  };\n};\n\nexport default useGetData;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,MAAMC,UAAU,GAAIC,iBAAyB,IAAK;EAAA;EAAA;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD;EACAQ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEN,QAAQ,CAAC;EAClC;;EAEA;EACA,MAAMO,QAAQ,GAAG,YAAY;IAAA;IAC3B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMT,QAAQ,CACnCU,IAAI,CAAC,YAAY,CAAC,CAClBC,MAAM,EAAE,CACRC,EAAE,CAAC,SAAS,EAAG,GAAEV,iBAAkB,EAAC,CAAC;IAExC,IAAIM,IAAI,EAAE;MACRH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MACjBJ,cAAc,CAACI,IAAI,CAAC;MACpBH,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;MACxB;MACA;MACA,MAAM;QAAEU;MAAW,CAAC,GAAGf,WAAW,CAACK,WAAW,CAAC;MAC/C,MAAM;QAAEW;MAAW,CAAC,GAAGf,WAAW,CAACI,WAAW,CAAC;MAE/CE,OAAO,CAACC,GAAG,CAACO,UAAU,CAAC;MACvBR,OAAO,CAACC,GAAG,CAACQ,UAAU,CAAC;IACzB;IACA,IAAIL,KAAK,EAAE;MACTJ,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEG,KAAK,CAAC;IAClC;IACA;IACAb,SAAS,CAAC,MAAM;MACdW,QAAQ,EAAE;IACZ,CAAC,EAAE,EAAE,CAAC;IACN,OAAO;MAAEC;IAAK,CAAC;EACjB,CAAC;EAAC,GA1BID,QAAQ;IAAA,QAYaT,WAAW,EACXC,WAAW;EAAA;AAcxC,CAAC;AAAC,IAlCIE,UAAU;AAoChB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}