{"ast":null,"code":"var _jsxFileName = \"/Users/hongdakyung/Desktop/myWorkSpace/comAround/src/components/CustomTag.tsx\",\n  _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { prosConsState } from \"../redux/module/SurveySlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTag = _ref => {\n  _s();\n  let {\n    id,\n    content\n  } = _ref;\n  // 장단점 태그 체크 or 체크해제할 때마다 해당 태그의 체크여부 상태값 store에 업데이트 하기\n  const dispatch = useDispatch();\n  const handleChecked = id => {\n    dispatch(prosConsState({\n      name: id\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(TagWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => handleChecked(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagLabel, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomTag, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = CustomTag;\nexport default CustomTag;\nconst TagWrapper = styled.div`\n  height: fit-content;\n  position: relative;\n  input[type=\"checkbox\"] {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    opacity: 0%;\n    margin: 0px;\n  }\n  input[type=\"checkbox\"]:checked + label {\n    background-color: #62ffa1;\n    box-shadow: none;\n  }\n`;\n_c2 = TagWrapper;\nconst TagLabel = styled.label`\n  display: none;\n  margin: 0px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 32px;\n  padding: 16px;\n  box-shadow: 0px 0px 8px 0px #8d8d8d40;\n  border-radius: 10px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n_c3 = TagLabel;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CustomTag\");\n$RefreshReg$(_c2, \"TagWrapper\");\n$RefreshReg$(_c3, \"TagLabel\");","map":{"version":3,"names":["useDispatch","styled","prosConsState","CustomTag","id","content","dispatch","handleChecked","name","TagWrapper","div","TagLabel","label"],"sources":["/Users/hongdakyung/Desktop/myWorkSpace/comAround/src/components/CustomTag.tsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { prosConsState } from \"../redux/module/SurveySlice\";\n\nconst CustomTag: React.FC<ProsConsType> = ({ id, content }) => {\n  // 장단점 태그 체크 or 체크해제할 때마다 해당 태그의 체크여부 상태값 store에 업데이트 하기\n  const dispatch = useDispatch();\n  const handleChecked = (id: string) => {\n    dispatch(prosConsState({ name: id }));\n  };\n\n  return (\n    <TagWrapper>\n      <input type=\"checkbox\" onChange={() => handleChecked(id)} />\n      <TagLabel>{content}</TagLabel>\n    </TagWrapper>\n  );\n};\n\nexport default CustomTag;\n\nconst TagWrapper = styled.div`\n  height: fit-content;\n  position: relative;\n  input[type=\"checkbox\"] {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    opacity: 0%;\n    margin: 0px;\n  }\n  input[type=\"checkbox\"]:checked + label {\n    background-color: #62ffa1;\n    box-shadow: none;\n  }\n`;\n\nconst TagLabel = styled.label`\n  display: none;\n  margin: 0px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 32px;\n  padding: 16px;\n  box-shadow: 0px 0px 8px 0px #8d8d8d40;\n  border-radius: 10px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,aAAa,QAAQ,6BAA6B;AAAC;AAE5D,MAAMC,SAAiC,GAAG,QAAqB;EAAA;EAAA,IAApB;IAAEC,EAAE;IAAEC;EAAQ,CAAC;EACxD;EACA,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,aAAa,GAAIH,EAAU,IAAK;IACpCE,QAAQ,CAACJ,aAAa,CAAC;MAAEM,IAAI,EAAEJ;IAAG,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,oBACE,QAAC,UAAU;IAAA,wBACT;MAAO,IAAI,EAAC,UAAU;MAAC,QAAQ,EAAE,MAAMG,aAAa,CAACH,EAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5D,QAAC,QAAQ;MAAA,UAAEC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAY;EAAA;IAAA;IAAA;IAAA;EAAA,QACnB;AAEjB,CAAC;AAAC,GAbIF,SAAiC;EAAA,QAEpBH,WAAW;AAAA;AAAA,KAFxBG,SAAiC;AAevC,eAAeA,SAAS;AAExB,MAAMM,UAAU,GAAGR,MAAM,CAACS,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAdID,UAAU;AAgBhB,MAAME,QAAQ,GAAGV,MAAM,CAACW,KAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAbID,QAAQ;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}