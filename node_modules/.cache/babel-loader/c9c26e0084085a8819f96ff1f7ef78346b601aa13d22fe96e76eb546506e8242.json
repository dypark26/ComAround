{"ast":null,"code":"var _jsxFileName = \"/Users/hongdakyung/Desktop/myWorkSpace/comAround/src/components/StarCard.tsx\",\n  _s = $RefreshSig$();\nimport StarRatings from \"react-star-ratings\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { starState } from \"../redux/module/SurveySlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarCard = _ref => {\n  _s();\n  let {\n    listType,\n    children\n  } = _ref;\n  // store에서 설문조사 상태값 전체 가져오기 (별점, 장단점...)\n  const dispatch = useDispatch();\n  const surveyData = useSelector(state => state.surveyData);\n\n  // 카드 children 값에 따라 교통편의 / 편의시설 / 주변맛집 평점 데이터 뽑아내기\n  const rating = children === \"교통편의\" ? surveyData.commute : children === \"편의시설\" ? surveyData.convenient : surveyData.restaurant;\n\n  // 별점 점수 변경할 때마다 변경된 상태값 store에 업데이트 하기\n  const handleStarRating = rating => {\n    dispatch(starState({\n      name: listType,\n      rating: rating\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StarRatings, {\n      name: \"rating\",\n      rating: rating,\n      changeRating: handleStarRating,\n      numberOfStars: 5,\n      starHoverColor: \"#FFCE22\",\n      starRatedColor: \"#FFCE22\",\n      starEmptyColor: \"#EBEBEB\",\n      starDimension: \"32px\",\n      starSpacing: \"2px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(StarCard, \"qfDZgoT4zEbqDoJsTBLQna/4ijo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = StarCard;\nexport default StarCard;\nconst Title = styled.div`\n  font-weight: 700;\n  font-size: 24px;\n  margin-bottom: 14px;\n`;\n_c2 = Title;\nconst CardWrapper = styled.div`\n  flex-direction: row;\n  height: calc(356px / 3 - 32px);\n  padding: 16px;\n  border-radius: 10px;\n  background-color: white;\n  box-shadow: 0px 0px 8px 0px #8d8d8d40;\n`;\n_c3 = CardWrapper;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StarCard\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"CardWrapper\");","map":{"version":3,"names":["StarRatings","styled","useDispatch","useSelector","starState","StarCard","listType","children","dispatch","surveyData","state","rating","commute","convenient","restaurant","handleStarRating","name","Title","div","CardWrapper"],"sources":["/Users/hongdakyung/Desktop/myWorkSpace/comAround/src/components/StarCard.tsx"],"sourcesContent":["import StarRatings from \"react-star-ratings\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/config/configStore\";\nimport { starState } from \"../redux/module/SurveySlice\";\n\nconst StarCard: React.FC<listProps> = ({ listType, children }) => {\n  // store에서 설문조사 상태값 전체 가져오기 (별점, 장단점...)\n  const dispatch = useDispatch();\n  const surveyData = useSelector((state: RootState) => state.surveyData);\n\n  // 카드 children 값에 따라 교통편의 / 편의시설 / 주변맛집 평점 데이터 뽑아내기\n  const rating =\n    children === \"교통편의\"\n      ? surveyData.commute\n      : children === \"편의시설\"\n      ? surveyData.convenient\n      : surveyData.restaurant;\n\n  // 별점 점수 변경할 때마다 변경된 상태값 store에 업데이트 하기\n  const handleStarRating = (rating: number) => {\n    dispatch(starState({ name: listType, rating: rating }));\n  };\n\n  return (\n    <CardWrapper>\n      <Title>{children}</Title>\n      <StarRatings\n        name=\"rating\"\n        rating={rating}\n        changeRating={handleStarRating}\n        numberOfStars={5}\n        starHoverColor=\"#FFCE22\"\n        starRatedColor=\"#FFCE22\"\n        starEmptyColor=\"#EBEBEB\"\n        starDimension=\"32px\"\n        starSpacing=\"2px\"\n      />\n    </CardWrapper>\n  );\n};\n\nexport default StarCard;\n\nconst Title = styled.div`\n  font-weight: 700;\n  font-size: 24px;\n  margin-bottom: 14px;\n`;\n\nconst CardWrapper = styled.div`\n  flex-direction: row;\n  height: calc(356px / 3 - 32px);\n  padding: 16px;\n  border-radius: 10px;\n  background-color: white;\n  box-shadow: 0px 0px 8px 0px #8d8d8d40;\n`;\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,SAAS,QAAQ,6BAA6B;AAAC;AAExD,MAAMC,QAA6B,GAAG,QAA4B;EAAA;EAAA,IAA3B;IAAEC,QAAQ;IAAEC;EAAS,CAAC;EAC3D;EACA,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,UAAU,GAAGN,WAAW,CAAEO,KAAgB,IAAKA,KAAK,CAACD,UAAU,CAAC;;EAEtE;EACA,MAAME,MAAM,GACVJ,QAAQ,KAAK,MAAM,GACfE,UAAU,CAACG,OAAO,GAClBL,QAAQ,KAAK,MAAM,GACnBE,UAAU,CAACI,UAAU,GACrBJ,UAAU,CAACK,UAAU;;EAE3B;EACA,MAAMC,gBAAgB,GAAIJ,MAAc,IAAK;IAC3CH,QAAQ,CAACJ,SAAS,CAAC;MAAEY,IAAI,EAAEV,QAAQ;MAAEK,MAAM,EAAEA;IAAO,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,oBACE,QAAC,WAAW;IAAA,wBACV,QAAC,KAAK;MAAA,UAAEJ;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eACzB,QAAC,WAAW;MACV,IAAI,EAAC,QAAQ;MACb,MAAM,EAAEI,MAAO;MACf,YAAY,EAAEI,gBAAiB;MAC/B,aAAa,EAAE,CAAE;MACjB,cAAc,EAAC,SAAS;MACxB,cAAc,EAAC,SAAS;MACxB,cAAc,EAAC,SAAS;MACxB,aAAa,EAAC,MAAM;MACpB,WAAW,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QACjB;EAAA;IAAA;IAAA;IAAA;EAAA,QACU;AAElB,CAAC;AAAC,GAlCIV,QAA6B;EAAA,QAEhBH,WAAW,EACTC,WAAW;AAAA;AAAA,KAH1BE,QAA6B;AAoCnC,eAAeA,QAAQ;AAEvB,MAAMY,KAAK,GAAGhB,MAAM,CAACiB,GAAI;AACzB;AACA;AACA;AACA,CAAC;AAAC,MAJID,KAAK;AAMX,MAAME,WAAW,GAAGlB,MAAM,CAACiB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAPIC,WAAW;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}