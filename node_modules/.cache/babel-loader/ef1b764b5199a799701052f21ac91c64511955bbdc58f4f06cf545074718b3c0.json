{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useCountALL from \"../components/useCountALL\";\nimport useCountAVE from \"../components/useCountAVE\";\nimport { supabase } from \"../util/supabase\";\nconst useGetData = urlReqCompanyName => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [companyData, setCompanyData] = useState([{}]);\n  const [totalPros1, setTotalPros1] = useState(0);\n  const [commuteAve, setCommuteAve] = useState(0);\n\n  // supabase 잘 연결되었는지 확인\n  console.log(\"supabase:\", supabase);\n  // 총점1개, 장점1개 state 만들어보기\n\n  // supabase에서 table 가져오는 함수\n  const getTable = async () => {\n    _s();\n    const {\n      data,\n      error\n    } = await supabase.from(\"SurveyData\").select().eq(\"company\", `${urlReqCompanyName}`);\n    if (data) {\n      console.log(data);\n      setCompanyData(data);\n      console.log(companyData);\n      const {\n        totalPros1\n      } = useCountALL(companyData);\n      const {\n        commuteAve\n      } = useCountAVE(companyData);\n      console.log(totalPros1);\n      console.log(commuteAve);\n      setTotalPros1(totalPros1);\n      setCommuteAve(commuteAve);\n    }\n    if (error) {\n      console.log(\"에러가 나쪙 ㅠ.ㅠ\", error);\n    }\n    // useEffect 부분\n    useEffect(() => {\n      getTable();\n    }, []);\n    return {\n      totalPros1,\n      commuteAve\n    };\n  };\n  _s(getTable, \"DOHxiDP0uAmpW/gqI7UVyc3Isk0=\", false, function () {\n    return [useCountALL, useCountAVE];\n  });\n};\n_s2(useGetData, \"LFEaS9dwVaAAnxhs7U8jJuEb5RU=\");\nexport default useGetData;","map":{"version":3,"names":["useEffect","useState","useCountALL","useCountAVE","supabase","useGetData","urlReqCompanyName","companyData","setCompanyData","totalPros1","setTotalPros1","commuteAve","setCommuteAve","console","log","getTable","data","error","from","select","eq"],"sources":["/Users/hongdakyung/Desktop/myWorkSpace/comAround-supabase-customHook/src/hooks/useGetData.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport useCountALL from \"../components/useCountALL\";\nimport CountALL from \"../components/useCountALL\";\nimport useCountAVE from \"../components/useCountAVE\";\nimport CountAVE from \"../components/useCountAVE\";\nimport { supabase } from \"../util/supabase\";\n\nconst useGetData = (urlReqCompanyName: string) => {\n  const [companyData, setCompanyData] = useState([{}]);\n  const [totalPros1, setTotalPros1] = useState(0);\n  const [commuteAve, setCommuteAve] = useState(0);\n\n  // supabase 잘 연결되었는지 확인\n  console.log(\"supabase:\", supabase);\n  // 총점1개, 장점1개 state 만들어보기\n\n  // supabase에서 table 가져오는 함수\n  const getTable = async () => {\n    const { data, error } = await supabase\n      .from(\"SurveyData\")\n      .select()\n      .eq(\"company\", `${urlReqCompanyName}`);\n\n    if (data) {\n      console.log(data);\n      setCompanyData(data);\n      console.log(companyData);\n      const { totalPros1 } = useCountALL(companyData);\n      const { commuteAve } = useCountAVE(companyData);\n\n      console.log(totalPros1);\n      console.log(commuteAve);\n      setTotalPros1(totalPros1);\n      setCommuteAve(commuteAve);\n    }\n    if (error) {\n      console.log(\"에러가 나쪙 ㅠ.ㅠ\", error);\n    }\n    // useEffect 부분\n    useEffect(() => {\n      getTable();\n    }, []);\n    return { totalPros1, commuteAve };\n  };\n};\n\nexport default useGetData;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,MAAMC,UAAU,GAAIC,iBAAyB,IAAK;EAAA;EAAA;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACAY,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEV,QAAQ,CAAC;EAClC;;EAEA;EACA,MAAMW,QAAQ,GAAG,YAAY;IAAA;IAC3B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMb,QAAQ,CACnCc,IAAI,CAAC,YAAY,CAAC,CAClBC,MAAM,EAAE,CACRC,EAAE,CAAC,SAAS,EAAG,GAAEd,iBAAkB,EAAC,CAAC;IAExC,IAAIU,IAAI,EAAE;MACRH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MACjBR,cAAc,CAACQ,IAAI,CAAC;MACpBH,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;MACxB,MAAM;QAAEE;MAAW,CAAC,GAAGP,WAAW,CAACK,WAAW,CAAC;MAC/C,MAAM;QAAEI;MAAW,CAAC,GAAGR,WAAW,CAACI,WAAW,CAAC;MAE/CM,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;MACvBI,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;MACvBD,aAAa,CAACD,UAAU,CAAC;MACzBG,aAAa,CAACD,UAAU,CAAC;IAC3B;IACA,IAAIM,KAAK,EAAE;MACTJ,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEG,KAAK,CAAC;IAClC;IACA;IACAjB,SAAS,CAAC,MAAM;MACde,QAAQ,EAAE;IACZ,CAAC,EAAE,EAAE,CAAC;IACN,OAAO;MAAEN,UAAU;MAAEE;IAAW,CAAC;EACnC,CAAC;EAAC,GA1BII,QAAQ;IAAA,QAUab,WAAW,EACXC,WAAW;EAAA;AAgBxC,CAAC;AAAC,IArCIE,UAAU;AAuChB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}