{"ast":null,"code":"// companyData : 해당 회사의 전체 데이터입니다.\n// category : commute | convenient | restaurant 가 들어옵니다.\n// countAVE 함수 : 인자로 들어온 'category'의 평균값을 계산하는 함수입니다. 리턴값은 계산된 평균값 1개입니다.\n// ⭐️ any로 타입 지정해놓은 부분은 supabase 계정 merge 후에 수정하도록 하겠습니다.\nconst countAVE = (companyData, category) => {\n  let commuteAve = 0;\n  companyData === null || companyData === void 0 ? void 0 : companyData.map(item => {\n    const aveArray = [];\n    console.log(\"item[category]:\", item[category]);\n    aveArray.push(item[category]);\n    console.log(\"aveArray.length :\", aveArray.length);\n    let commuteTotalResult = aveArray.reduce((total, value) => total += value, 0);\n    console.log(\"commuteTotalResult는 commute의 총합\", commuteTotalResult);\n    commuteAve = commuteTotalResult / aveArray.length;\n    console.log(\"commuteAve(평균값):\", commuteAve);\n  });\n  return commuteAve;\n};\nexport default countAVE;","map":{"version":3,"names":["countAVE","companyData","category","commuteAve","map","item","aveArray","console","log","push","length","commuteTotalResult","reduce","total","value"],"sources":["/Users/hongdakyung/Desktop/myWorkSpace/comAround/src/util/countAVE.tsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\n// companyData : 해당 회사의 전체 데이터입니다.\n// category : commute | convenient | restaurant 가 들어옵니다.\n// countAVE 함수 : 인자로 들어온 'category'의 평균값을 계산하는 함수입니다. 리턴값은 계산된 평균값 1개입니다.\n// ⭐️ any로 타입 지정해놓은 부분은 supabase 계정 merge 후에 수정하도록 하겠습니다.\nconst countAVE = (companyData: any, category: string): number => {\n  let commuteAve: number = 0;\n  companyData?.map((item: any) => {\n    const aveArray: number[] = [];\n    console.log(\"item[category]:\", item[category]);\n    aveArray.push(item[category]);\n    console.log(\"aveArray.length :\", aveArray.length);\n    let commuteTotalResult: number = aveArray.reduce(\n      (total: number, value: number) => (total += value),\n      0\n    );\n    console.log(\"commuteTotalResult는 commute의 총합\", commuteTotalResult);\n    commuteAve = commuteTotalResult / aveArray.length;\n    console.log(\"commuteAve(평균값):\", commuteAve);\n  });\n  return commuteAve;\n};\n\nexport default countAVE;\n"],"mappings":"AAGA;AACA;AACA;AACA;AACA,MAAMA,QAAQ,GAAG,CAACC,WAAgB,EAAEC,QAAgB,KAAa;EAC/D,IAAIC,UAAkB,GAAG,CAAC;EAC1BF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,GAAG,CAAEC,IAAS,IAAK;IAC9B,MAAMC,QAAkB,GAAG,EAAE;IAC7BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,IAAI,CAACH,QAAQ,CAAC,CAAC;IAC9CI,QAAQ,CAACG,IAAI,CAACJ,IAAI,CAACH,QAAQ,CAAC,CAAC;IAC7BK,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAACI,MAAM,CAAC;IACjD,IAAIC,kBAA0B,GAAGL,QAAQ,CAACM,MAAM,CAC9C,CAACC,KAAa,EAAEC,KAAa,KAAMD,KAAK,IAAIC,KAAM,EAClD,CAAC,CACF;IACDP,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEG,kBAAkB,CAAC;IAClER,UAAU,GAAGQ,kBAAkB,GAAGL,QAAQ,CAACI,MAAM;IACjDH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,UAAU,CAAC;EAC7C,CAAC,CAAC;EACF,OAAOA,UAAU;AACnB,CAAC;AAED,eAAeH,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}